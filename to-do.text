Clean
  Resolve all uncommited changes. The monorepo needs to be totally unambiguous.
  Finish reviewing old NE TypeScript branch and delete folder.
  Review NE devlog and delete folder and commit that.
  Delete or archive encumber and old niedzielski and oidoid repos. This should be curated.
  Compare all the repos.
  Update all GitHub repo settings including profile settings (eg, github.com/organizations/oidoid/settings/profile).
  Drop needless Uint usages.
  Align niedzielski/ parent repo.
  Prioritize repo to-dos and old project drafts. At least solitaire.text (and images), linear-text.text (and images), default.text, nature-elsewhere.text (and images) and each repo's to-do's.
  Clear Git stashes.
  Pull in any code worth saving from encumber, practice, and other repos.
  Add publish script for sublimesolitaire.com. This is a messy manual process now.

API improvements
  Refactor Input, InputPoller, etc as classes. API should look something like `is('On'|'Off', ...buttons: 'PrimaryButton' | 'PrimaryMouse', 'Triggered'|'Active', ...types = 'Mouse' | 'Pen')`.
  Review old combo supported Input implementation + tests.
  Refactor Num to at least delete Num and Unumber. Num should maybe be BigInt with util.
  Rework layers and bitmasks.
  Refactor XY and Box as simplified classes. Look at old implementation. Re-review API.
  If Box was XY and WH instead of XY and XY, moving would only require one operation, sending WH to GPU is more efficient, and it's easier to reason about. It costs an extra type though or embedding width and height as props.
  Sprite should wrap all the APIs of its constituent pieces like `isIntersecting(XY|Box|Sprite)` and `cel()` (get cel for rendering).
  Make the ECS API a class. This should be something like new, add, query, update.
  Review ECS.get(). This has a lot of typing but is only used internally.
  Can I get rid of second template param to SublimeUpdate?
  Num.ts needs I16.subClamp(), addClamp(), etc. These are in XY somehow but now lower.
  Document system update order for ECS. It's the order they're added.
  Add support for input order. I think this has to be update order but also have notion of handling.

Nature Elsewhere
  Fix license.text
  AGPL-3.0-only AND no CC-BY-SA-4.0
  Review Rust branch.
  Revert to TypeScript branch but don't attempt to integrate with Deno monorepoid.

sublime-solitaire
  Finish all the illustrations.
  Fix issue on Joie's phone.
  Make win occur on final card building, not reset.
  Add dark mode support with palette swapping.
  Test context loss.
  Share with Deno requester, read.cv, FB, Twitter, niedzielski.com, oidoid.com.

oidoid
  Update all the submodule references.
  Add webhook for x/.

Publish
  Revise oidoid.com and niedzielski.com/works websites. Align github.com/niedzielski and github.com/oidoid. Add void too.
  Finalize oidlib / oidkit / odk naming.
  Add GitHub sponsorship.
  Add Patreon sponsorship.
  Add oidoid organization readme like https://github.com/hapsoc/.github.
  Fix 01 Netlify deployment.

Next
  Tiny Asteroid-like sprite game to exercise void. Can I build it in a day? If not, what changes do I need to make?
  Sketch out new Linear Text plan.

linear-text
  Check linear-text can build ok still.
  Transfer package.json keywords.
  Move to-do markdown to text.
  Check license.text.

Questions
  How can I make the oidlib + void more library-like? Combine into ODK / TMNT SDK?
  How can I make publish.ts more declarative? I would go shell script but not sure how to increment SemVer gracefully.
  Make oidoid an LLC?

API Features
  Add Sprite grouping support and center sublime card layout. How should this work?
  Add UI components like buttons and forms.
  Test text rendering.

Backlog
  Explore using `git -C` instead of sub-makes.
  Replace enum patterns with Set?
  Apply shorthands like "string" to "str" universally.
  Explore esbuild for bundling.
  Review Deno std library for how it applies.
  Add tags used to readme like #repos and #strings.
  Add input profiler debug pane; FPS meter, avg, min, max, now.
  Polish nttt.
  Add goals. Review local notes for software as human as possible.
    Make the SDK / platform as friendly and plain as possible.
    Make website as friendly as possible.
    Make the platform easy to iterate on.
  Get a better domain for mem font.

